version: '3.8'

services:
  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: books_user
      POSTGRES_PASSWORD: books_password
      POSTGRES_DB: books_db
    ports:
      - ${DB_PORT:-5434}:5432
    volumes:
      - books_postgres_data:/var/lib/postgresql/data
    networks:
      - books_network

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    restart: always
    expose:
      - ${PORT:-3000}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${PORT:-3000}:${PORT:-3000}
      - 9229:9229
      - 5556:5556
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      NODE_ENV: development
      PORT: ${PORT}
      DATABASE_URL: ${DATABASE_URL:-postgresql://books_user:books_password@db:5432/books_db}
      JWT_SECRET: ${JWT_SECRET:-secret}
      NODE_OPTIONS: "--max-old-space-size=1024 --no-warnings"
    networks:
      - books_network
    depends_on: 
      - db
    command: >
     sh -c "
        echo 'Aguardando banco de dados...' &&
        sleep 10 &&
        echo 'Iniciando aplicação...' &&
        npm run start:dev
      "

networks:
  books_network:
    driver: bridge     
volumes:
  books_postgres_data:
  node_modules:
